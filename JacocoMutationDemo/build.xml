<?xml version="1.0" encoding="UTF-8"?>

<project name="Mutation Demo with JaCoCo" default="rebuild" xmlns:jacoco="antlib:org.jacoco.ant">
	
	<description>
	  JaCoCo coverage report for MutationDemo classes
	</description>

	<property name="src.dir" location="./src/main/java" />
	<property name="test.src.dir" location="./src/test/java" />
	<property name="result.dir" location="./target" />
	<property name="result.classes.dir" location="${result.dir}/classes" />
	<property name="result.test.classes.dir" location="${result.dir}/test-classes" />
	<property name="result.report.dir" location="${result.dir}/coverage/site/jacoco" />
	<property name="result.junit.report.dir" location="${result.dir}/junit" />
	<property name="result.exec.file" location="${result.dir}/coverage/jacoco.exec" />

	<!-- Step 1: Import JaCoCo Ant tasks -->
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="./lib/jacocoant.jar" />
	</taskdef>
	
	<path id="project.class.path">
        <pathelement location="./lib/junit-4.12.jar"/>
        <pathelement location="./lib/hamcrest-all-1.3.jar"/>
		<pathelement location="./lib/log4j-1.2.8.jar"/>
		<pathelement location="${result.classes.dir}"/>
		<pathelement location="${result.test.classes.dir}"/>
    </path>

	<target name="clean">
		<delete dir="${result.dir}/classes" />
		<delete dir="${result.dir}/test-classes" />
		<delete dir="${result.dir}/coverage" />
		<delete dir="${result.junit.report.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${result.classes.dir}" />
		<mkdir dir="${result.test.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false">
			<classpath refid="project.class.path"/>
		</javac>
		<javac srcdir="${test.src.dir}" destdir="${result.test.classes.dir}" debug="true" includeantruntime="false">
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="test" depends="compile">
		<!-- Step 2: Wrap test execution with the JaCoCo coverage task -->
		<jacoco:coverage destfile="${result.exec.file}">
			<!--<java classname="com.newt.MutationDemo.App" fork="true">
				<classpath path="${result.classes.dir}" />
			</java> -->
			<junit fork="true" forkmode="once">
				<batchtest fork="yes" todir="${result.junit.report.dir}">
					<fileset dir="${test.src.dir}">
						<include name="**/*Test*.java" />
					</fileset>
				</batchtest>
				<classpath refid="project.class.path"/>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="report" depends="test">
		<!-- Step 3: Create coverage report -->
		<jacoco:report>

			<!-- This task needs the collected execution data and ... -->
			<executiondata>
				<file file="${result.exec.file}" />
			</executiondata>

			<!-- the class files and optional source files ... -->
			<structure name="MutationDemo JaCoCo">
				<classfiles>
					<fileset dir="${result.classes.dir}" />
					<fileset dir="${result.test.classes.dir}" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src.dir}" />
					<fileset dir="${test.src.dir}" />
				</sourcefiles>
			</structure>

			<!-- to produce reports in different formats. -->
			<html destdir="${result.report.dir}" />
			<csv destfile="${result.report.dir}/report.csv" />
			<xml destfile="${result.report.dir}/report.xml" />
		</jacoco:report>
	</target>

	<target name="rebuild" depends="clean,compile,test,report" />

</project>